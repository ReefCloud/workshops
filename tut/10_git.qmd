---
title: Git and version control
author: "Murray Logan"
date: "`r format(Sys.time(), '%d %B, %Y')`"
format: 
  html:
    toc: true
    toc-float: true
    number-sections: true
    number-depth: 3
    embed-resources: true
    code-fold: false
    code-tools: true
    code-summary: "Show the code"
execute:
  keep-md: true
crossref:
  fig-title: '**Figure**'
  fig-labels: arabic
  tbl-title: '**Table**'
  tbl-labels: arabic
engine: knitr
bibliography: resources/references.bib
output_dir: "docs"
---

```{r setup, include=FALSE,warning=FALSE, message=FALSE}
knitr::opts_chunk$set(echo = TRUE,warning=FALSE, message=FALSE, cache = TRUE, comment = "")
options(tinytex.engine = 'xelatex')
cleanRmdInput <- function(x) {
#x <- gsub("```\\{r","```markdown\n`r ''```\\{r",x)
x <- gsub("^```$","`` `",x)  # the Makefile will then change this back to ``` after pandoc
x
}
library(tidyverse)
library(pander)
FIG_PATH <- '10_git_files/figure-html/'
```

::: {.newsbox}

**Other useful tutorials or resources**

- [https://git-scm.com/book/en/v2](https://git-scm.com/book/en/v2)
- [https://www.atlassian.com/git/tutorials](https://www.atlassian.com/git/tutorials)
- [https://marklodato.github.io/visual-git-guide/index-en.html](https://marklodato.github.io/visual-git-guide/index-en.html)
- [https://git-scm.com/docs/gittutorial](https://git-scm.com/docs/gittutorial)
- [https://marklodato.github.io/visual-git-guide/index-en.html](https://marklodato.github.io/visual-git-guide/index-en.html)
- [https://try.github.io/levels/1/challenges/1](https://try.github.io/levels/1/challenges/1)
- [https://onlywei.github.io/explain-git-with-d3/](https://onlywei.github.io/explain-git-with-d3/)
- [http://git-school.github.io/visualizing-git/](http://git-school.github.io/visualizing-git/)
- [https://github.com/sensorflo/git-draw](https://github.com/sensorflo/git-draw)
:::



This tutorial will take a modular approach. The first section will
provide an overview of the basic concepts of git. The second section
will provide a quick overview of basic usage and the third and final
section will cover intermediate level usage. In an attempt to ease
understanding, the tutorial will blend together git commands and
output, schematic diagrams and commentary in an attempt to ease
understanding.

The following table surves as both a key and overview of the most
common actions and git 'verbs'.

```{cat}
#| label: common
#| echo: true
#| eval: true
#| cache: true
#| engine.opts:
#|   file: "resources/common.tikz"

\tikzstyle{TARGET} = [font={\fontspec[Scale=2]{NotoSans-Regular}}]

\tikzstyle{hashText} = [font={\fontspec[Scale=1.5]{Inconsolata}}]
\tikzstyle{commentText} = [font={\fontspec[Scale=1.0]{Inconsolata}}]
\tikzstyle{refText} = [font={\fontspec[Scale=1.5]{Inconsolata}}]

\definecolor{color_branch}{rgb}{1,0.8,0.4}
\definecolor{color_head}{HTML}{6495ED} %
\definecolor{color_HEAD}{rgb}{0.26,0.65,0.91}
\definecolor{color_commit}{rgb}{0.9,0.9,0.2}
\definecolor{color_inactive}{rgb}{0.90,0.9,0.9}
\definecolor{color_detached}{rgb}{0.90,0.9,0.9}
\definecolor{color_derivative}{rgb}{0.12,0.6,0.51}
\definecolor{color_local}{rgb}{0.9,0.9,0.2}
\definecolor{color_remote}{rgb}{1,0.55,0.15}
 
% A template for making the storage symbol
\newcommand{\state}[3]{
\draw (#1) node [draw=none,fill=#2,shape=circle,minimum width=2cm] (#3) {
\begin{tikzpicture}
\node [draw=white, fill=white,shape=cylinder,shape aspect=1.3 ,shape border rotate=90,minimum height=1.6cm,minimum width=1.5cm] at (0,0) (Cylinder) {};
\draw[draw=#2,very thick,line width=0.1cm,anchor=north west] ($(Cylinder.north west) +(-0.05cm,-0.1cm)$) arc (-180:0:0.8cm and 0.2cm); 
\draw[draw=#2,very thick,line width=0.1cm,anchor=north west] ($(Cylinder.north west) +(-0.05cm,-0.5cm)$) arc (-180:0:0.8cm and 0.2cm); 
\draw[draw=#2,very thick,line width=0.1cm,anchor=north west] ($(Cylinder.north west) +(-0.05cm,-0.9cm)$) arc (-180:0:0.8cm and 0.2cm); 
\end{tikzpicture}
};
}

\newcommand{\commit}[5]{
\node [#1,inner sep=0,outer sep=0] (#2) {
\begin{tikzpicture}[#1]
\draw [#1] node [draw=black!40!#3,fill=#3,shape=circle,minimum width=1.0cm,line width=3pt] (x) {};
%\node [below,hashText] at (x.south) {#4};
\end{tikzpicture}
};
\ifx\notempty#4\empty
\node [below,hashText, minimum height = 0] at (#2.south) {#4};
\fi
\ifx\notempty#5\empty
\node [below,commentText,text=gray, minimum height = 0] at ($(#2.south) +(0,-0.5)$) {#5};
\fi
}

\newcommand{\rcommit}[5]{
\node [#1,inner sep=0,outer sep=0] (#2) {
\begin{tikzpicture}[#1]
\draw [#1] node [draw=black!40!#3,fill=#3,shape=rectangle,minimum width=1.0cm,minimum height=1.0cm,line width=3pt] (x) {};
%\node [below,hashText] at (x.south) {#4};
\end{tikzpicture}
};
\node [below,hashText] at (#2.south) {#4};
\node [below,commentText,text=gray] at ($(#2.south) +(0,-0.5)$) {#5};
}

\newcommand{\master}[1] {
\node [#1,rectangle,fill=color_branch,draw=black!20!color_branch,line width=2pt,refText,minimum height=0.8cm] (master) {main};
}
\newcommand{\rmaster}[1] {
\node [#1,rectangle,fill=color_branch,draw=black!20!color_branch,line width=2pt,refText,minimum height=0.8cm] (rmaster) {origin/main};
}
\newcommand{\branch}[2] {
\node [#1,rectangle,fill=color_branch,draw=black!20!color_branch,line width=2pt,refText,minimum height=0.8cm] (#2) {#2};
}

\newcommand{\HEAD}[1] {
\node [#1,rectangle,fill=color_HEAD,draw=black!20!color_HEAD,line width=2pt,refText,minimum height=0.8cm] (HEAD) {HEAD};
}
\newcommand{\rHEAD}[1] {
\node [#1,rectangle,fill=color_HEAD,draw=black!20!color_HEAD,line width=2pt,refText,minimum height=0.8cm] (rHEAD) {origin/HEAD};
}
```

```{tikz}
%| label: Fig0
%| engine: tikz
%| echo: false
%| cache: true
%| include: false
%| dependson: common
%| class: tikz
%| engine-opts:
%|   template: "resources/tikz-minimal.tex"
\input{resources/common.tikz}
\begin{tikzpicture}%[every node/.style={inner sep=0,outer sep=0, minimum height = 0}]
\commit{}{A}{white}{}{}
\draw [-,line width=3pt,draw=black!60] (A) -- ++(-1,0);
\end{tikzpicture}
```
```{bash}
#| label: Fig0-conv
#| warning: false
#| message: false
#| include: false
#| echo: false
convert -trim +repage -density 300 -resize 20% 10_git_files/figure-html/Fig0-1.pdf 10_git_files/figure-html/Fig0-1.png 
```

```{tikz}
%| label: Fig1
%| engine: tikz
%| echo: false
%| cache: true
%| include: false
%| dependson: common
%| class: tikz
%| engine-opts:
%|   template: "resources/tikz-minimal.tex"
\input{resources/common.tikz}
\begin{tikzpicture}[every node/.style={inner sep=0,outer sep=0, minimum height = 0}]
\commit{}{A}{color_commit!30}{}{}
\draw [-,line width=3pt,draw=black!60] (A) -- ++(-1,0);
\end{tikzpicture}
```
```{bash}
#| label: Fig1-conv
#| warning: false
#| message: false
#| include: false
#| echo: false
convert -trim +repage -density 300 -resize 20% 10_git_files/figure-html/Fig1-1.pdf 10_git_files/figure-html/Fig1-1.png
```


```{tikz}
%| label: Fig2
%| engine: tikz
%| echo: false
%| cache: true
%| include: false
%| dependson: common
%| class: tikz
%| engine-opts:
%|   template: "resources/tikz-minimal.tex"
\input{resources/common.tikz}
\begin{tikzpicture}[every node/.style={inner sep=0,outer sep=0, minimum height = 0}]
\commit{}{A}{color_commit}{}{}
\draw [-,line width=3pt,draw=black!60] (A) -- ++(-1,0);
\end{tikzpicture}
```
```{bash}
#| label: Fig2-conv
#| warning: false
#| message: false
#| include: false
#| echo: false
convert -trim +repage -density 300 -resize 20% 10_git_files/figure-html/Fig2-1.pdf 10_git_files/figure-html/Fig2-1.png
```

```{tikz}
%| label: Fig3a
%| engine: tikz
%| echo: false
%| cache: true
%| include: false
%| dependson: common
%| class: tikz
%| engine-opts:
%|   template: "resources/tikz-minimal.tex"
\input{resources/common.tikz}
\begin{tikzpicture}%[every node/.style={inner sep=0,outer sep=0, minimum height = 0}]
\commit{}{A}{color_inactive}{}{}
\commit{right = 1cm of A}{B}{color_commit}{}{}
\commit{right = 1cm of B}{C}{color_detached}{}{}
\draw [-,line width=3pt,draw=black!60] (A) -- ++(-1,0);
\draw [-,line width=3pt,draw=black!60] (B) -- (A);
\end{tikzpicture}
```
```{bash}
#| label: Fig3a-conv
#| warning: false
#| message: false
#| include: false
#| echo: false
convert -trim +repage -density 300 -resize 20% 10_git_files/figure-html/Fig3a-1.pdf 10_git_files/figure-html/Fig3a-1.png  
```

```{tikz}
%| label: Fig3b
%| engine: tikz
%| echo: false
%| cache: true
%| include: false
%| dependson: common
%| class: tikz
%| engine-opts:
%|   template: "resources/tikz-minimal.tex"
\input{resources/common.tikz}
\begin{tikzpicture}%[every node/.style={inner sep=0,outer sep=0, minimum height = 0}]
\commit{}{A}{color_inactive}{}{}
\commit{right = 1cm of A}{B}{color_commit}{}{}
\commit{right = 1cm of B}{C}{color_detached!30}{}{}
\draw [-,line width=3pt,draw=black!60] (A) -- ++(-1,0);
\draw [-,line width=3pt,draw=black!60] (B) -- (A);
\draw [->,dashed,line width=3pt,draw=black!60] (C) -- (B);
\end{tikzpicture}
```
```{bash}
#| label: Fig3b-conv
#| warning: false
#| message: false
#| include: false
#| echo: false
convert -trim +repage -density 300 -resize 20% 10_git_files/figure-html/Fig3b-1.pdf 10_git_files/figure-html/Fig3b-1.png 
```

```{tikz}
%| label: Fig3c
%| engine: tikz
%| echo: false
%| cache: true
%| include: false
%| dependson: common
%| class: tikz
%| engine-opts:
%|   template: "resources/tikz-minimal.tex"
\input{resources/common.tikz}
\begin{tikzpicture}%[every node/.style={inner sep=0,outer sep=0, minimum height = 0}]
\commit{}{A}{color_inactive}{}{}
\commit{right = 1cm of A}{B}{color_inactive}{}{}
\commit{right = 1cm of B}{C}{color_commit}{}{}
\draw [-,line width=3pt,draw=black!60] (A) -- ++(-1,0);
\draw [-,line width=3pt,draw=black!60] (B) -- (A);
\draw [-,line width=3pt,draw=black!60] (C) -- (B);
\draw [->,line width=3pt,draw=black!60] (A) to[out=45] (C);

\end{tikzpicture}
```
```{bash}
#| label: Fig3c-conv
#| warning: false
#| message: false
#| include: false
#| echo: false
convert -trim +repage -density 300 -resize 20% 10_git_files/figure-html/Fig3c-1.pdf 10_git_files/figure-html/Fig3c-1.png 
```

```{tikz}
%| label: Fig4
%| engine: tikz
%| echo: false
%| cache: true
%| include: false
%| dependson: common
%| class: tikz
%| engine-opts:
%|   template: "resources/tikz-minimal.tex"
\input{resources/common.tikz}

\tikzstyle{refText} = [font={\fontspec[Scale=1.5]{InconsolataSemiCondensed-Regular}}]
\begin{tikzpicture}%[every node/.style={inner sep=0,outer sep=0, minimum height = 0}]
\commit{}{A}{color_inactive}{}{}
\commit{right = 1cm of A}{B}{color_inactive}{}{}
\commit{right = 1cm of B}{C}{color_commit}{}{}
\draw [-,line width=3pt,draw=black!60] (A) -- ++(-1,0);
\draw [-,line width=3pt,draw=black!60] (B) -- (A);
\draw [-,line width=3pt,draw=black!60] (C) -- (B);
\commit{above = 0.5cm of B}{D}{color_branch}{}{}
\draw [-,line width=3pt,draw=black!60] (A.east) to[out=0,in=180] (D);
%\node[right = 0.5cm of C, rectangle, refText] (master) {main};
\master{right = 0.5cm of C}
\draw[->,line width=3pt,draw=black!60] (master) -- (C);
\branch{right = 0.5cm of D}{Feature} 
\draw[->,line width=3pt,draw=black!60] (Feature) -- (D);
\end{tikzpicture}
```
```{bash}
#| label: Fig4-conv
#| warning: false
#| message: false
#| include: false
#| echo: false
convert -trim +repage -density 300 -resize 20% 10_git_files/figure-html/Fig4-1.pdf 10_git_files/figure-html/Fig4-1.png 
```


```{tikz}
%| label: Fig5
%| engine: tikz
%| echo: false
%| cache: true
%| include: false
%| dependson: common
%| class: tikz
%| engine-opts:
%|   template: "resources/tikz-minimal.tex"
\input{resources/common.tikz}
\tikzstyle{refText} = [font={\fontspec[Scale=1.5]{InconsolataSemiCondensed-Regular}}]
\begin{tikzpicture}%[every node/.style={inner sep=0,outer sep=0, minimum height = 0}]
\commit{}{A}{color_inactive}{}{}
\commit{right = 1cm of A}{B}{color_inactive}{}{}
\commit{right = 1cm of B}{C}{color_commit}{}{}
\draw [-,line width=3pt,draw=black!60] (A) -- ++(-1,0);
\draw [-,line width=3pt,draw=black!60] (B) -- (A);
\draw [-,line width=3pt,draw=black!60] (C) -- (B);
\commit{above = 0.5cm of B}{D}{color_inactive}{}{}
\draw [-,line width=3pt,draw=black!60] (A.east) to[out=0,in=180] (D);
\master{right = 0.5cm of C}\draw[->,line width=3pt,draw=black!60] (master) -- (C);
\branch{right = 0.5cm of D}{Feature}\draw[->,line width=3pt,draw=black!60] (Feature) -- (D);
\draw [-,line width=3pt,draw=black!60] (D.east) to[out=0,in=180] (C);
\end{tikzpicture}
```

```{bash}
#| label: Fig5-conv
#| echo: false
convert -trim +repage -density 300 -resize 20% 10_git_files/figure-html/Fig5-1.pdf 10_git_files/figure-html/Fig5-1.png   
```

```{tikz}
%| label: Fig6a
%| engine: tikz
%| echo: false
%| cache: true
%| include: false
%| dependson: common
%| class: tikz
%| engine-opts:
%|   template: "resources/tikz-minimal.tex"
\input{resources/common.tikz}
\tikzstyle{refText} = [font={\fontspec[Scale=1.5]{InconsolataSemiCondensed-Regular}}]
\begin{tikzpicture}%[every node/.style={inner sep=0,outer sep=0, minimum height = 0}]
\commit{}{A}{color_inactive}{}{}
\commit{right = 1cm of A}{B}{color_detached!30}{}{}
\commit{right = 1cm of B}{C}{color_commit}{}{}
\draw [-,line width=3pt,draw=black!60] (A) -- ++(-1,0);
\draw [-,line width=3pt,draw=black!60] (C) -- (A);
\end{tikzpicture}
```

```{bash}
#| label: Fig6a-conv
#| echo: false
convert -trim +repage -density 300 -resize 20% 10_git_files/figure-html/Fig6a-1.pdf 10_git_files/figure-html/Fig6a-1.png  
```

```{tikz}
%| label: Fig5b
%| engine: tikz
%| echo: false
%| cache: true
%| include: false
%| dependson: common
%| class: tikz
%| engine-opts:
%|   template: "resources/tikz-minimal.tex"
\input{resources/common.tikz}
\tikzstyle{refText} = [font={\fontspec[Scale=1.5]{InconsolataSemiCondensed-Regular}}]
\begin{tikzpicture}%[every node/.style={inner sep=0,outer sep=0, minimum height = 0}]
\commit{}{A}{color_commit}{}{}
\draw [-,line width=3pt,draw=black!60] (A) -- ++(-1,0);
%\commit{right = 1cm of A}{B}{color_commit}{}{}
%\draw [-,line width=3pt,draw=black!60] (B) -- (A);
\master{right = 0.5cm of A}\draw[->,line width=3pt,draw=black!60] (master) -- (A);

\rcommit{below = 1cm of A}{rA}{color_inactive}{}{}
\draw [-,line width=3pt,draw=black!60] (rA) -- ++(-1,0);
\rcommit{right = 1cm of rA}{rB}{color_commit}{}{}
\draw [-,line width=3pt,draw=black!60] (rB) -- (rA);
\rmaster{right = 0.5cm of rB}\draw[->,line width=3pt,draw=black!60] (rmaster) -- (rB);

\draw [<-,line width=3pt, draw=black!60, dashed] (A) -- (rB);
\end{tikzpicture}
```
```{bash}
#| label: Fig5b-conv
#| echo: false
convert -trim +repage -density 300 -resize 20% 10_git_files/figure-html/Fig5b-1.pdf 10_git_files/figure-html/Fig5b-1.png 
```

```{tikz}
%| label: Fig5a
%| engine: tikz
%| echo: false
%| cache: true
%| include: false
%| dependson: common
%| class: tikz
%| engine-opts:
%|   template: "resources/tikz-minimal.tex"
\input{resources/common.tikz}
\tikzstyle{refText} = [font={\fontspec[Scale=1.5]{InconsolataSemiCondensed-Regular}}]
\begin{tikzpicture}%[every node/.style={inner sep=0,outer sep=0, minimum height = 0}]
\commit{}{A}{color_inactive}{}{}
\draw [-,line width=3pt,draw=black!60] (A) -- ++(-1,0);
\commit{right = 1cm of A}{B}{color_commit}{}{}
\draw [-,line width=3pt,draw=black!60] (B) -- (A);
\master{right = 0.5cm of B}\draw[->,line width=3pt,draw=black!60] (master) -- (B);

\rcommit{below = 1cm of A}{rA}{color_commit}{}{}
\draw [-,line width=3pt,draw=black!60] (rA) -- ++(-1,0);
\rmaster{right = 0.5cm of rA}\draw[->,line width=3pt,draw=black!60] (rmaster) -- (rA);

\draw [->,line width=3pt, draw=black!60, dashed] (B) -- (rA);
\end{tikzpicture}
```
```{bash}
#| label: Fig5a-conv
#| echo: false
convert -trim +repage -density 300 -resize 20% 10_git_files/figure-html/Fig5a-1.pdf 10_git_files/figure-html/Fig5a-1.png
```


<table class= "table-sm table-borderless" style='border-spacing:20px;'>
<tr>
<td>
<a href="#Initialize">Initialize git</a><br>
![](10_git_files/figure-html/Fig0-1.png)
</td>
<td width='40%'>
`git init`
</td>
<td>
Establish a git repository (within the current path if no path provided)
</td>
</tr>
<tr>
<td>
<a href="#Commit">Staging</a><br> 
    ![](10_git_files/figure-html/Fig1-1.png)
</td>
<td>
`git add <file>`<br>
where `file` is one or more files to stage
</td>
<td>
Staging is indicating which files and their states are to be included in the next commit.
</td>
</tr>

<tr>
<td>
<a href="#Commit">Committing</a><br>
    ![](10_git_files/figure-html/Fig2-1.png)
</td>
<td>
`git commit -m "<Commit message>"`<br>
where `<Commit message>` is a message to accompany the commit
</td>
<td>
Commiting generates a 'snapshot' of the file system.
</td>
</tr>
<tr>
  <td>
    <a href="#checkout">Checkout</a><br>
    ![](10_git_files/figure-html/Fig3a-1.png)
  </td>
  <td>
    `git checkout "<commit>"`<br>
    where `<commit>` is a reference to a commit to be reviewed
  </td>
  <td>
    Explore the state associated with a specific commit
  </td>
</tr>
<tr>
  <td>
    <a href="#reset">Reset</a><br>
    <!-- <img src="10_git_files/figure-html/Fig3b-1.png" class="" alt=""  style="transform: scale(0.2);"/> -->
    ![](10_git_files/figure-html/Fig3b-1.png)
  </td>
  <td>
    `git reset --hard "<commit>"`<br>
    where `<commit>` is a reference to a commit
  </td>
  <td>
    Return to a previous state, effectively erasing subsequent commits..
  </td>
</tr>
<tr>
  <td>
    <a href="#revert">Revert</a><br>
    ![](10_git_files/figure-html/Fig3c-1.png)
  </td>
  <td>
    `git revert "<commit>"`<br>
    where `<commit>` is a reference to a commit that should be nullified (inverted)
  </td>
  <td>
    Generate a new commit that reverses the changes introduced by a commit thereby effectively rolling back to a previous state (the one prior to the nominated commit) whilst still maintaining full commit history.
  </td>
</tr>

<tr>
  <td>
    <a href="#Branching">Branching</a><br>
    ![](10_git_files/figure-html/Fig4-1.png)
  </td>
  <td>
    `git branch <name>`<br>
    `git checkout <name>`<br>
    where `<name>` is a reference to a branch name (e.g. 'Feature')
  </td>
  <td>
    Take edits in the project in a new direction to allow for modifications that will
    not affect the main (master) branch.
  </td>
</tr>

<tr>
  <td>
    <a href="#Merging">Merging</a><br>
    ![](10_git_files/figure-html/Fig5-1.png)
  </td>
   <td>
     `git checkout master`<br>
     `git branch <name>`<br>
     where `<name>` is a reference to a branch name (e.g. 'Feature') that
     is to be merged back into `master`.
  </td>
  <td>
    Incorporate changes in a branch into another branch (typically `master`).
  </td>
</tr>

<tr>
  <td>
    <a href="#rebase">Rebasing</a><br>
    ![](10_git_files/figure-html/Fig6a-1.png)
  </td>
   <td>
     `git rebase -i HEAD~<number>`<br>
     where `<number>` is the number of previous commits to
     squash together with head.
  </td>
  <td>
    Combine multiple commits together into a single larger commit.
  </td>
</tr>

<tr>
  <td>
    <a href="#Pulling">Pulling</a><br>
    ![](10_git_files/figure-html/Fig5b-1.png)
  </td>
   <td>
     `git pull -u <remote> <branch>`<br>
     where `<remote>` is the name of the remote (typically `origin`)
     and `<branch>` is the branch to sync with remote (typically `master`).
  </td>
  <td>
    Pull changes from a branch of a remote repository.
  </td>
</tr>

<tr>
  <td>
    <a href="#Pushing">Pushing</a><br>
    ![](10_git_files/figure-html/Fig5a-1.png)
  </td>
   <td>
     `git push -u <remote> <branch>`<br>
     where `<remote>` is the name of the remote (typically `origin`)
     and `<branch>` is the branch to sync with remote (typically `master`).
  </td>
  <td>
    Push changes up to a branch of a remote repository.
  </td>
</tr>
</table>


# Context


Git is a distributed versioning system. This means that the complete
contents and history of a repository (in simplistic terms a repository
is a collection of files and associated metadata) can be completely
duplicated across multiple locations.

No doubt you have previously been working on a file (could be a
document, spreadsheet, script or any other type of file) and got to a
point where you have thought that you are starting to make edits that
substantially change the file and therefore have considered saving the
new file with a new name that indicates that it is a new version.

```{tikz}
%| label: Fig10
%| engine: tikz
%| echo: false
%| cache: true
%| class: tikz
%| engine-opts:
%|   template: "resources/tikz-minimal.tex"

\tikzstyle{TARGET} = [font={\fontspec[Scale=2]{NotoSans-Regular}}] 
\tikzstyle{CODE} = [font={\fontspec[Scale=2]{InconsolataSemiCondensed-Regular}}]
\tikzstyle{fileText} = [font={\fontspec[Scale=1]{InconsolataSemiCondensed-Regular}}] 

\definecolor{color_workspace}{rgb}{0.12,0.6,0.51}
\definecolor{color_index}{rgb}{0.78,0.86,0.27}
\definecolor{color_local}{rgb}{0.9,0.9,0.2}
\definecolor{color_remote}{rgb}{1,0.55,0.15}
\definecolor{color_master}{rgb}{0.36,0.27,0.87}
\definecolor{color_head}{HTML}{6495ED} %\definecolor{color_head}{rgb}{0.26,0.65,0.91}

\newcommand{\file}[3] {
\coordinate (#3) at (#1);
\draw [anchor=top left](#1) rectangle ++(1.5,-2);
\draw [fill=color_workspace]($(#1) +(1.5,0)$) -- ++(0,-0.5) --++(-0.5,0.5) -- cycle; 
\node [anchor=north west,fileText] at ($(#1) +(0,-0.5)$) {#2};
}

\begin{tikzpicture}

\file{0,0}{\begin{minipage}{1.3cm}\textcolor{red}{- item 1}\\\textcolor{red}{- item 2}\end{minipage}}{F1}
\node [fileText] at ($(F1) + (0.75,0.3)$) {Version 1};
\node [fileText] at ($(F1) + (0.75,-2.3)$) {todo.txt};

\file{2,0}{\begin{minipage}{1.3cm}- item 1\\- item 2\\\textcolor{red}{- item 3}\end{minipage}}{F2}
\node [fileText] at ($(F2) + (0.75,0.3)$) {Version 2};
\node [fileText] at ($(F2) + (0.75,-2.3)$) {todo2.txt};

\file{4,0}{\begin{minipage}{1.3cm}- item 1\\- item 2\\- item 3\\\textcolor{red}{- item 4}\end{minipage}}{F3}
\node [fileText] at ($(F3) + (0.75,0.3)$) {Version 3};
\node [fileText] at ($(F3) + (0.75,-2.3)$) {todo3.txt};

\file{6,0}{\begin{minipage}{1.3cm}- item 1\\- item 2\\\textcolor{blue}{- item 4}\end{minipage}}{F4}
\node [fileText] at ($(F4) + (0.75,0.3)$) {Version 4};
\node [fileText] at ($(F4) + (0.75,-2.3)$) {todo4.txt};

\node [fileText] at ($(F4) +(3.5,-1)$) {\begin{minipage}{2.5cm}An example of a poor, adhoc versioning system.\end{minipage}};)

\end{tikzpicture}
```
