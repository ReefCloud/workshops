[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ReefCloud R/Statistics resources",
    "section": "",
    "text": "This tutorial series should be considered reference and background materials in support of preparation for more advanced statistical analyses with R. The topics covered progress from introductory and foundational through to more advanced and as such, the tutorials are intended to be consumed and worked through largely in the order laid out in the sidebar menu to the left."
  },
  {
    "objectID": "index.html#r-code",
    "href": "index.html#r-code",
    "title": "ReefCloud R/Statistics resources",
    "section": "2.1 R code",
    "text": "2.1 R code\nThroughout the tutorials, R code snippets will be presented in a block such as:\n\n## construct variables\nx &lt;- rep(1:5, times = 2)\ng &lt;- gl(n = 2, k = 5, labels = c('High', 'Low'))\ny &lt;- 2 + (3 * x) + (as.numeric(g) - 1) + rnorm(10, mean = 0, sd = 1)\n## compile into a data frame\ndat &lt;- data.frame(x, g, y)\n## print out data frame\ndat\n\n   x    g         y\n1  1 High  6.487693\n2  2 High  7.277885\n3  3 High 10.620876\n4  4 High 15.228541\n5  5 High 16.624695\n6  1  Low  5.369279\n7  2  Low  6.815068\n8  3  Low 12.199842\n9  4  Low 14.875970\n10 5  Low 17.671057\n\n\nThis format is partially reminiscent of the layout of code editors, albeit with a very opinionated color scheme.\n\nthe R code appears as the text over the faint yellow background.\nany output appears below the code (white background) and in red font\nthe light gray numbers in the left hand gutter represent the line numbers. These can be useful when trying to draw attention to a particular line of code\nthe light gray text in the R code block beginning with two hash symbols ‘##’ are comments\nin the upper right hand corner there is a clipboard symbol. Clicking on this symbol will copy the code to the clipboard to help you transfer the code to your own R session.\n\nOccasionally (and particularly within tables) code snippets may alternatively be presented without the line number gutter. In such cases, there tends to only be a single line of code and there are substantial space savings if the gutter is removed.\n\nx &lt;- rep(1:5, times = 2)"
  },
  {
    "objectID": "index.html#bash-code",
    "href": "index.html#bash-code",
    "title": "ReefCloud R/Statistics resources",
    "section": "2.2 Bash code",
    "text": "2.2 Bash code"
  },
  {
    "objectID": "index.html#plain-text",
    "href": "index.html#plain-text",
    "title": "ReefCloud R/Statistics resources",
    "section": "2.3 Plain text",
    "text": "2.3 Plain text\nThe contents of plain text files will similarly be presented either as:\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. \nMaecenas sed metus congue risus sagittis viverra. Etiam \nhendrerit orci arcu, et vehicula libero vulputate nec. \nAliquam placerat lacinia ex sit amet varius. Suspendisse \npotenti. Nam tristique fringilla lacus id tincidunt. Donec \nquis turpis tempus leo pharetra malesuada. Vivamus consequat \na quam nec vestibulum.\n\nor when necessary to save space:\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit."
  },
  {
    "objectID": "10_git.html",
    "href": "10_git.html",
    "title": "Git and version control",
    "section": "",
    "text": "Other useful tutorials or resources\n\nhttps://git-scm.com/book/en/v2\nhttps://www.atlassian.com/git/tutorials\nhttps://marklodato.github.io/visual-git-guide/index-en.html\nhttps://git-scm.com/docs/gittutorial\nhttps://marklodato.github.io/visual-git-guide/index-en.html\nhttps://try.github.io/levels/1/challenges/1\nhttps://onlywei.github.io/explain-git-with-d3/\nhttp://git-school.github.io/visualizing-git/\nhttps://github.com/sensorflo/git-draw\n\n\nThis tutorial will take a modular approach. The first section will provide an overview of the basic concepts of git. The second section will provide a quick overview of basic usage and the third and final section will cover intermediate level usage. In an attempt to ease understanding, the tutorial will blend together git commands and output, schematic diagrams and commentary in an attempt to ease understanding.\nThe following table surves as both a key and overview of the most common actions and git ‘verbs’.\n\n\n\n\nInitialize git \n\n\ngit init\n\n\nEstablish a git repository (within the current path if no path provided)\n\n\n\n\nStaging \n\n\ngit add &lt;file&gt; where file is one or more files to stage\n\n\nStaging is indicating which files and their states are to be included in the next commit.\n\n\n\n\nCommitting \n\n\ngit commit -m \"&lt;Commit message&gt;\" where &lt;Commit message&gt; is a message to accompany the commit\n\n\nCommiting generates a ‘snapshot’ of the file system.\n\n\n\n\nCheckout \n\n\ngit checkout \"&lt;commit&gt;\" where &lt;commit&gt; is a reference to a commit to be reviewed\n\n\nExplore the state associated with a specific commit\n\n\n\n\nReset  \n\n\ngit reset --hard \"&lt;commit&gt;\" where &lt;commit&gt; is a reference to a commit\n\n\nReturn to a previous state, effectively erasing subsequent commits..\n\n\n\n\nRevert \n\n\ngit revert \"&lt;commit&gt;\" where &lt;commit&gt; is a reference to a commit that should be nullified (inverted)\n\n\nGenerate a new commit that reverses the changes introduced by a commit thereby effectively rolling back to a previous state (the one prior to the nominated commit) whilst still maintaining full commit history.\n\n\n\n\nBranching \n\n\ngit branch &lt;name&gt; git checkout &lt;name&gt; where &lt;name&gt; is a reference to a branch name (e.g. ‘Feature’)\n\n\nTake edits in the project in a new direction to allow for modifications that will not affect the main (master) branch.\n\n\n\n\nMerging \n\n\ngit checkout master git branch &lt;name&gt; where &lt;name&gt; is a reference to a branch name (e.g. ‘Feature’) that is to be merged back into master.\n\n\nIncorporate changes in a branch into another branch (typically master).\n\n\n\n\nRebasing \n\n\ngit rebase -i HEAD~&lt;number&gt; where &lt;number&gt; is the number of previous commits to squash together with head.\n\n\nCombine multiple commits together into a single larger commit.\n\n\n\n\nPulling \n\n\ngit pull -u &lt;remote&gt; &lt;branch&gt; where &lt;remote&gt; is the name of the remote (typically origin) and &lt;branch&gt; is the branch to sync with remote (typically master).\n\n\nPull changes from a branch of a remote repository.\n\n\n\n\nPushing \n\n\ngit push -u &lt;remote&gt; &lt;branch&gt; where &lt;remote&gt; is the name of the remote (typically origin) and &lt;branch&gt; is the branch to sync with remote (typically master).\n\n\nPush changes up to a branch of a remote repository."
  }
]